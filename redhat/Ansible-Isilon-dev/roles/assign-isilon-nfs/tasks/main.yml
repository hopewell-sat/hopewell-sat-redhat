---
#- set_fact:
#      isilon_nfs:
#        centro_datos_sat: "{{ diccionario_valor_descripcion[centro_datos_sat] }}"
#  ignore_errors: True

#- set_fact:
#    frwcil: "{{ read_write_clients_ip_list | regex_replace('\"','\\'')}}"
#    frcil: "{{ root_clients_ip_list | regex_replace('\"','\\'')}}"
#    frocil: "{{ read_only_clients_ip_list | regex_replace('\"', '\\'')}}"
#  ignore_errors: True

- name: Obtener Directorios
  uri:
    url: "https://{{ api_url }}:{{ api_port }}/platform/4/protocols/nfs/exports/"
    method: GET
    headers:
      x-isi-ifs-target-type: container
    user: "{{ api_user }}"
    password: "{{ api_pass }}"
    force_basic_auth: yes
    validate_certs: no
    return_content: yes
    follow_redirects: yes
    status_code: 200,201
  register: directorios
  ignore_errors: True

#- name: debug salida directorios to json
#  debug: var=directorios.json.exports

- name: Declarar variables
  set_fact:
    directorio:

- name: Obtener datos directorio sin arreglo
  set_fact:
    directorio: "{{ item }}"
#  register: directorio
  with_items: "{{ directorios.json.exports }}"
  when: item.description == "{{ directory_name }}"

- name: Declarar variables
  set_fact:
    fact_read_write_clients:
    fact_root_clients:
    fact_read_only_clients:

- name: Agregar arreglo de ips read_write_clients
  set_fact:
    fact_read_write_clients: "{{ read_write_clients_ip_list }}, \"{{ item }}\", {{fact_read_write_clients}}"
  loop: "{{ directorio.read_write_clients }}"

#- name: Declarar variable
#  set_fact:
#    fact_root_clients:

- name: Agregar arreglo de ips root_clients
  set_fact:
    fact_root_clients: "{{ root_clients_ip_list }}, \"{{ item }}\", {{fact_root_clients}}"
  loop: "{{ directorio.root_clients }}"

#- name: Declarar variable fact_read_only_clients
#  set_fact:
#    fact_read_only_clients:

- name: Agregar arreglo de ips fact_read_only_clients
  set_fact:
    fact_read_only_clients: "{{ read_only_clients_ip_list }}, \"{{ item }}\", {{fact_read_only_clients}}"
  loop: "{{ directorio.read_only_clients }}"

#  with_items: {{ directorio.read_only_clients }}
- name: fact_read_write_clients
  debug: var=fact_read_write_clients

- name: fact_read_write_clients
  debug: var=fact_root_clients

- name: fact_read_write_clients
  debug: var=fact_read_only_clients

- set_fact:
    urlHeader: "curl https://10.20.0.46:8080/platform/4/protocols/nfs/exports/{{ directorio.id }} -X PUT -k -u admin:smartvm -v --data"
    urlBody: "{\"read_write_clients\":[ {{ fact_read_write_clients | regex_replace('[\\s\\S]{0,1}$' , '') }}], \"root_clients\": [{{ fact_root_clients  | regex_replace('[\\s\\S]{0,1}$' , '')}}]}, \"read_only_clients\": [ {{ fact_read_only_clients  | regex_replace('[\\s\\S]{0,1}$' , '') }}]"

- name: urlBody
  debug: var=urlBody

- name: Modificar Directorio modulo
  uri:
    url: "https://{{ api_url }}:{{ api_port }}/platform/4/protocols/nfs/exports/{{ directorio.id }}"
    method: PUT
    headers:
      x-isi-ifs-target-type: container
    body: "{\"paths\":[\"/ifs/nfs/exports/{{ directory_name }}\"],\"all_dirs\": true,\"read_write_clients\": [{{ fact_read_write_clients | regex_replace('[\\s\\S]{0,1}$' , '') }}],\"root_clients\": [{{ fact_root_clients | regex_replace('[\\s\\S]{0,1}$' , '') }}] ,\"read_only_clients\": [{{ fact_read_only_clients | regex_replace('[\\s\\S]{0,1}$' , '') }}] }"
#    body: "{{ urlBody }}"
    body_format: json
    user: "{{ api_user }}"
    password: "{{ api_pass }}"
    force_basic_auth: yes
    validate_certs: no
    return_content: yes
    follow_redirects: yes
#    status_code: 200,201,204
  register: salida
  ignore_errors: True

#- name: Actualizar directorio shell
#  shell: " {{urlHeader}} '{{ urlBody }}'"
#  register: salida_shell

- set_fact:
    salida_error: "{{ salida.failed }}"

- name: Imprimir resultado
  debug:
    var: salida

- name: Ejecutando una sola tarea desde assign-isilon-nfs/tasks/assign-isilon-nfs_handlers.yml
  import_tasks: assign-isilon-nfs_handlers.yml
  #import_role:
    #name: assign-isilon-nfs
    #tasks_from: assign-isilon-nfs_handlers.yml

- name: Obtener timestamp del sistema
  shell: "date +%Y-%m-%d_%H:%M:%S"
  register: fecha_inicio_proceso

- set_fact:
    nombre_archivo_isilon: "{{ numero_de_ticket }}-{{ directory_name | regex_replace('\\.') | regex_replace(' ') }}-{{ awx_job_template_name | regex_replace('miq_','') | regex_replace('_provision','') | regex_replace('//') | regex_replace('\\.') | regex_replace(' ') }}_{{ fecha_inicio_proceso.stdout | regex_replace('-') | regex_replace(':') | regex_replace(' ') | regex_replace('_') }}"
  ignore_errors: True

- debug:
    msg: "{{ nombre_archivo_isilon }} Se genero error?: {{salida_error}}"

- name: Inicio de archivo HTML
  copy:
    dest: "/tmp/{{ nombre_archivo_isilon }}.html"
    content: |
            <html>
               <head>
                  <title>Resumen de asignación de Isilon</title>
                  <meta charset="UTF-8">
                  <meta name="viewport" content="width=device-width, initial-scale=1">
                  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
                  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
                  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
                  <div class="jumbotron jumbotron-fluid" style="background-color:white;padding-top: 0px;padding-bottom: 0px">
                    <div class="container">
                       <img src="https://drive.google.com/uc?id=1QqaTGiBl0y9HeAlZ_iqyLP21y_YdBbay&export=download" class="img-responsive">
                    </div>
                  </div>
               </head>
               <body>
                 <div class="container">
  ignore_errors: True

- name: Creación de tabla Generales
  blockinfile:
    path:  "/tmp/{{ nombre_archivo_isilon }}.html"
    marker: ""
    block: |
            <!-- Tabla de contenido -->
                         <table class="table table-striped">
                              <tr>
                                <th style="color:white; background-color:#3C79C2; text-align:center; font-weight: bold" colspan="2">DATOS GENERALES</th>
                              </tr>
                            <tr>
                               <td>Número de ticket:  </td>
                               <td> {{ numero_de_ticket }} </td>
                            </tr>
                            <tr>
                               <td>Nombre del solicitante:  </td>
                               <td> {{ nombre_solicitante }} </td>
                            </tr>
                            <tr>
                               <td>Correo del solicitante:  </td>
                               <td> {{ correo_solicitante }} </td>
                            </tr>
                            <tr>
                               <td>Nombre del directorio:  </td>
                               <td> {{ directory_name }} </td>
                            </tr>
                         </table>
  when: not salida_error
  ignore_errors: True

- name: Creación de tabla datos Isilon
  blockinfile:
    path: "/tmp/{{ nombre_archivo_isilon }}.html"
    marker: ""
    block: |
            <!-- Tabla de presentacion -->
                         </br>
                         <table class="table table-striped">
                            <tr>
                               <th style="color:white; background-color:#3C79C2; text-align:center; font-weight: bold" colspan="3">Datos de Isilon</th>
                            </tr>
  when: not salida_error
  ignore_errors: True

- name: Llenado de tabla Presentación
  blockinfile:
    path: "/tmp/{{ nombre_archivo_isilon }}.html"
    marker: ""
    block: |
           <!-- Isilon -->
                            <tr>
                               <td style="vertical-align:middle; text-align:center" rowspan="2">Isilon</td>
                               <td style="color:white; background-color:#A4A4A4; text-align:center; font-weight: bold" colspan="2">Datos de Isilon</td>
                            </tr>
                            <tr>
                               <td>Lista IPs de clientes de lectura y escritura:  </td>
                               <td> {{ read_write_clients_ip_list }} </td>
                            </tr>
                            <tr>
                               <td>Lista IPs de clientes raíz:  </td>
                               <td> {{ root_clients_ip_list }} </td>
                            </tr>
                            <tr>
                               <td>Lista IPs de clientes de solo lectura:  </td>
                               <td> {{ read_only_clients_ip_list }} </td>
                            </tr>
  when: not salida_error
  ignore_errors: True

- name: Final de archivo HTML
  blockinfile:
    path: "/tmp/{{ nombre_archivo_isilon }}.html"
    marker: ""
    block: |
        <!-- final de archivo-->
                </div>
              </body>
          </html>
  ignore_errors: True

- name: general_correo_info is succeeded
  import_role:
    name: general
    tasks_from: general_enviocorreo
  vars:
    general_correo_de: "senha.notificacion@gmail.com"
    general_correo_para: "{{ correo_solicitante }}"
    general_correo_concopia: "{{ lista_correo_electronico }}"
    general_correo_asunto: Folio {{ numero_de_ticket }} - Despliegue Completado - {{ awx_job_template_name | regex_replace('miq_','') | regex_replace('_provision','') }}
    general_correo_cuerpo: |
                            <br/>Datos generales del despliegue con el folio <b>{{ numero_de_ticket }}</b>.-
                            <br/>
                            <ul>
                            <li>Item desplegado: <b>{{ awx_job_template_name | regex_replace('miq_','') | regex_replace('_provision','') }}</b></li>
                            <li>Solicitante / Correo:  <b>{{ nombre_solicitante }}</b> / <b>{{ correo_solicitante }}</b></li>
                            <li>Centro de Datos: <b>{{ isilon_nfs.centro_datos_sat }}</b></li>
                            <li>Estado de despliegue: <b>Exitoso</b></li>
                            </ul>
                            <br/>
                            <br/>Documento anexo.-
                            <ul>
                            <li>Documento detalle de elementos desplegados en formato HTML <b>{{ nombre_archivo_isilon }}.html</b></li>
                            </ul>
    general_correo_adjuntos: "/tmp/{{ nombre_archivo_isilon }}.html"
  when: not salida_error
  ignore_errors: True

- name: general_correo_info is failed
  import_role:
    name: general
    tasks_from: general_enviocorreo
  vars:
    general_correo_de: "senha.notificacion@gmail.com"
    general_correo_para: "{{ correo_solicitante }}"
    general_correo_concopia: "{{ lista_correo_electronico }}"
    general_correo_asunto: Folio {{ numero_de_ticket }} - Despliegue Fallido - {{ awx_job_template_name | regex_replace('miq_','') | regex_replace('_provision','') }}
    general_correo_cuerpo: |
                            <br/>Datos generales del despliegue con el folio <b>{{ numero_de_ticket }}</b>.-
                            <br/>
                            <ul>
                            <li>Item desplegado: <b>{{ awx_job_template_name | regex_replace('miq_','') | regex_replace('_provision','') }}</b></li>
                            <li>Solicitante / Correo:  <b>{{ nombre_solicitante }}</b> / <b>{{ correo_solicitante }}</b></li>
                            <li>Estado de despliegue: <b>Fallido</b></li>
                            </ul>
                            <br/>
                            <br/>Mensaje de error.-
                            <ul>
                            <li><b>Despliegue fallido por error de comunicación</b></li>
                            </ul>
  when: salida_error
...
