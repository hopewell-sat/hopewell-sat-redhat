---
- name: Generando la url de manageIQ
  set_fact:
    provider_url: "{{ manageiq.api_url }}/api/providers/{{ provider_id }}"

- name: Asignando el servicio que se llamara y referenciara
  set_fact:
    svc_url: "/api/{{ manageiq.service }}"

- set_fact: new_vm_uuid="{{ vmware_resultado.instance.hw_product_uuid }}"

- name: Generando vinculacion
  uri:
    url: "{{ provider_url }}"
    method: POST
    body:
      action: refresh
    body_format: json
    validate_certs: False
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: output

- name: set the task href
  set_fact:
    task_url: "{{ output.json.task_href}}"

- name: Esperando el termino de tarea de CF a nivel tarea
  uri:
    url: "{{ task_url }}"
    method: GET
    validate_certs: False
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: task_result
  until: task_result.json.state == 'Finished' or task_result.json.status == 'Error'
  failed_when: task_result.json.status == 'Error'
  retries: "{{max_retries}}"
  delay: "{{retry_interval}}"
- debug: var=task_result

- set_fact:
    find_vm_url: "{{ manageiq.api_url }}/api/vms?expand=resources&attributes=href,uid_ems&filter[]=uid_ems='{{ new_vm_uuid }}'"

- name: Obteniendo token output
  uri:
    url: "{{ find_vm_url }}"
    method: GET
    validate_certs: no
    headers:
        X-Auth-Token: "{{ manageiq.api_token }}"
        Content-Type: "application/json"
    body_format: json
    return_content: yes
  register: token_output

- debug: var=token_output

- set_fact:
    cf_vm_href: "{{ token_output.json.resources[0].href }}"

#- debug: var=cf_vm_href

- name: Creando array de vms generadas
  set_fact:
    vms: "{{ vms|default([]) + [ { 'href': svc_url, 'resource':  { 'href': item } } ] }}"
  with_items:
    - "{{ cf_vm_href }}"

- name: vinculando las vm a CF
  uri:
    url: "{{ manageiq.api_url }}/api/services"
    method: POST
    body_format: json
    body:
      action: add_resource
      resources : "{{ vms }}"
    validate_certs: False
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: output
